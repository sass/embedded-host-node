name: CI

defaults:
  run: {shell: bash}

env:
  PROTOC_VERSION: 3.x
  DEFAULT_NODE_VERSION: 15.x # If changing this, also change jobs.tests.strategy.matrix.node_version

on:
  push:
    branches: [main]
    tags: ['**']
  pull_request:

jobs:
  static_analysis:
    name: Static analysis
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
          check-latest: true
      - uses: arduino/setup-protoc@v1
        with:
          version: ${{ env.PROTOC_VERSION }}
          repo-token: '${{ github.token }}'
      - uses: dart-lang/setup-dart@v1
        with: {sdk: stable}
      - run: npm install
      - run: npm run init
      - run: npm run check

  tests:
    name: 'Tests | Node ${{ matrix.node-version }} | ${{ matrix.os }}'
    runs-on: ${{ matrix.os }}-latest

    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        node-version: [15.x, 14.x, 12.x] # If changing this, also change env.DEFAULT_NODE_VERSION
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
      - uses: arduino/setup-protoc@v1
        with:
          version: ${{ env.PROTOC_VERSION }}
          repo-token: '${{ github.token }}'
      - uses: dart-lang/setup-dart@v1
        with: {sdk: stable}
      - run: dart --version
      - run: npm install
      - run: npm run init
      - run: npm run test

  # The versions should be kept up-to-date with the latest LTS Node releases.
  # They next need to be rotated October 2021. See
  # https://github.com/nodejs/Release.
  sass_spec:
    name: 'JS API Tests | Node ${{ matrix.node_version }} | ${{ matrix.os }}'
    runs-on: ${{ matrix.os }}-latest

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows, macos]
        node_version: [16]
        include:
          # Include LTS versions on Ubuntu
          - os: ubuntu
            node_version: 14
          - os: ubuntu
            node_version: 12

    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
        with: {sdk: stable}
      - uses: actions/setup-node@v2
        with: {node-version: "${{ matrix.node_version }}"}
      - uses: arduino/setup-protoc@v1
        with:
          version: ${{ env.PROTOC_VERSION }}
          repo-token: '${{ github.token }}'
      - run: npm install

      - name: Check out sass-spec
        run: tool/github-action/check-out-sass-spec.sh
        env:
          PR_BRANCH: "${{ github.base_ref }}"
          CURRENT_REF: "${{ github.ref }}"
          PR_BODY: "${{ github.event.pull_request.body }}"

      - name: Compile
        run: |
          npm run init
          npm run compile
          ln -s {`pwd`/,dist/}lib/src/vendor/dart-sass-embedded
          # Prefer the Sass specification to the natively-generated .d.ts files.
          # This ensures that features the embedded host doesn't yet support
          # don't cause compile-time failures.
          find dist -name '*.d.ts' -exec rm {} \;

      - name: Link into sass-spec
        run: npm install sass@file:..
        working-directory: sass-spec

      - name: Check out Sass specification
        run: git clone https://github.com/sass/sass.git language --depth 1

      - name: Run tests
        run: npm run js-api-spec -- --sassSassRepo ../language
        working-directory: sass-spec

  deploy_npm:
    name: Deploy npm
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/') && github.repository == 'sass/embedded-host-node'"

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
          check-latest: true
          registry-url: 'https://registry.npmjs.org'
      - run: npm install
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: '${{ secrets.NPM_TOKEN }}'
